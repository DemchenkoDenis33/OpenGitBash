https://t.me/DemchenkoDenys

1) Прочитать про клиент-серверную архитектуру
Клиент-сервер - это сетевая архитектура в которой задания или нагрузка распределены между серверами и клиентами.
Клиент - отправляет запрос
Сервер - отвечает на запрос   также  (сервер - может быть клиентом)
Дата центр - это когда много серверов.


Клиент-серверная архитектура может быть :
1-уровневые ()
2-х уровневые (клиент- сервер)
3-х уровневые (клиент - сервер - база данных)
многоуровневые (клиент - сервер - база данных - много других серверов)




2) Что такое HTTP и HTTPS
HTTP - это протокол передачи гипертекста
HTTPS - это зашифрованная версия HTTP протокола (безопасность, Аутентификация, Контроль целостности)




3) HTTP методы
Метод HTTP ( HTTP Method) последовательность из любых символов, кроме управляющих и разделителей, указывающая на основную операцию над ресурсом.
Обычно Метод представляет собой английское слово, написанное заглавными буквами.
Название метода может быть чувствительно к регистру.


Сервер может использовать любые методы. Если сервер не распознал указанный клиентом
метод, то он должен вернуть статус(....)


Безопасный метод не изменяет сервер то есть идемпотентны


GET         - получение ресурса (Запрашивает представление ресурса. Такие запросы могут только                  извлекать данные.)
HEAD      - (Запрашивает ресурс, как и GET, но ответ приходит без тела.)
POST      - создание ресурса (Отправляет сущности к указанному ресурсу.)
PUT         - обновление ресурса (Заменяет текущие представления ресурса данными запроса.)
DELETE  - удаление ресурса
CONNECT - Настраивает туннель с сервером, определенным по ресурсу.
OPTIONS - Описывает параметры соединения с ресурсом.
PATCH     - Частично изменяет ресурс.




4) HTTP статус коды сервера
* это часть первой строки ответа сервера при запросах по протоколу HTTP.
           их бывает 5-классов. Идентифицировать класс можно по первой цифре.


5хх  (ошибка на стороне сервера) - если метод серверу неизвестен
500
501 - не выполнено
502 - шлюзовый сбой
503 - существуют технические неполадки
504 - отсутствует ответ
505 - отсутствует поддержка текущей версии HTTP-протокола
507 - не хватает места на жестком диске
510 - не найдено расширение




4хх  (ошибка на стороне клиента) - если метод известен но не применим к конкретному ресурсу
400 - ошибка синтаксиса
401 - отсутствует аутентификация
403 - отсутствует доступ к документу
404 - отсутствует соответствующий ресурс по введенному URL
405 - некорректный метод 
406 - некорректный / неподдерживаемый краулером формат запроса
407 - отсутствует регистрация прокси
408 - таймаут запроса
409 - несовместимость двух запросов
410 - ресурс более не существует по указанному URL




3хх  (перенаправление (обнаружен редирект на другой адрес ) 
300 - не удалось идентифицировать точный URL
301 - документ был навсегда перемещен на новый URL
303 - нужно направить пользователя на иной URL
302 - документ был временно перемещен на новый URL
304 - документ не модифицировался
305 - доступ к этому документу возможен исключительно через прокси.
307 - документ был временно перемещен на иной URL




2хх  (запрос обработан успешно)
200 - успешный запрос данных
201 - завершена успешная транзакция
202 - запрос принят, но еще не завершен
203 - данные получены не из первоисточника
204 - запрос был обработан правильно
205 - клиенту необходимо осуществить сброс содержимого
206 - ошибка частичного содержимого
207 - выполнено несколько операций


1хх (информационные) 





5) Что такое ядро браузера 
это программа преобразующая содержимое веб страниц HTML, XML, и т.д.
и информацию о форматирования (CSS -   в изображение)




6) Какие браузеры какие ядра используют


Gecko (ядро Mozilla  Firefox)  
Отличительной чертой Gecko является то, что код полностью открыт, поэтому его можно разрабатывать в высокой степени. Программисты по всему миру Вы можете написать код для него и добавить функциональность. Поскольку это ядро ​​с открытым исходным кодом, многие его одобряют.
Presto (pre-Opera kernel) (устарело)
Особенностью этого движка является скорость рендеринга, это динамическое ядро. Самым большим отличием является обработка скриптов. У Presto есть естественное преимущество. Вся или часть страницы может реагировать на события скрипта. Кроме того, ядро ​​имеет самую высокую скорость при выполнении Javascrīpt.
Webkit (ядро Safari, прототип ядра Chrome)
Открытый исходный код, это собственное ядро ​​Apple и ядро, используемое браузером Safari от Apple. Движок Webkit включает в себя механизм верстки WebCore и механизм синтаксического анализа JavaScriptCore
Webkit - это также бесплатное программное обеспечение и открытый исходный код. 
Bink (Chrome)
В проекте Chromium механизм рендеринга Blink (то есть ядро ​​браузера) был разработан и встроен в браузер Chrome. Blink на самом деле является веткой WebKit.






7) Что такое API
API (Application programming interface) программный интерфейс приложения с помощью которого вы можете общаться с сервером.
API - это описание способов (это набор компонентов) которыми одна комп. прог. может взаимодействовать с другой






8)  Что такое эндпоинты?
(Endpoint  с англ. — конечная точка)
Представляет собой некий шлюз, который соединяет серверные процессы приложения с внешним интерфейсом. Простыми словами, это адрес, на который отправляются сообщения. Чтобы понять, что такое эндпоинты, важно упомянуть работу API


Эндпоинт - это само обращение к маршруту отдельным HTTP методом. Эндпоинт выполняют конкретную задачу, принимают параметры и возвращают данные Клиенту.






9) URL (URI, URL, URN)


URI (Uniform Resource Identifier) - последовательность символов, идентифицирующая абстрактный или физический ресурс.
URL (Uniform Resource Locator) - это URI, который, помимо идентификации ресурса, предоставляет еще и информацию о местонахождении этого ресурса.


URN (Uniform Resource Name) -  это URI, который только идентифицирует ресурс в определённом пространстве имён (и, соответственно, в определённом контексте), но не указывает его местонахождение.






10) Идемпотентные HTTP методы
Идемпотентный метод является таким - когда запрос сделанный несколько раз на сервер не меняет его состояние.
Идемпотентные методы: GET, POST, PUT, DELETE, 






11) Безопасные HTTP методы
Безопасные - не меняют данные, можно выполнять их в любой последовательности.
к ним относятся: GET, HEAD, OPTIONS.





12) Идентификация, Аутентификация, Авторизация
Идентификация - это процедура, в результате выполнения которой на основании совпадения признаков происходит распознание.
Чтобы идентифицировать личность, человек должен быть кем-то узнан, идентифицирован, приравнен.
Идентификация личности означает, что этот человек тот, за кого он себя выдает.


Аутентификация - процедура проверки личности,  например проверка подлинности пользователя путем сравнения введённого им пароля с паролем, сохраненным в базе данных


Авторизация   Это процесс подтверждения прав на совершение определенных операций






13) Что такое IP
IP (Internet Protocol) (адрес) уникальный числовой идентификатор устройства в компьютерной сети, работающей по протоколу TCP/IP.
Это адрес компьютера, сервера или ещё какого-нибудь сетевого оборудования. Служит для того, чтобы упорядочить устройства в сети.




14) Что такое откаты в DNS
DNS (англ. Domain Name System «система доменных имен»)
Компьютерная распределительная система для получения информации о доменах.
Система иерархической связи, призванная организовать хранение и обмен данными про доменные имена между серверами.


Что такое DNS сервер?
Сервер DNS обеспечивает хранение и администрирование данных в иерархической структуре. В его задачи входит передача сведений о доменном имени. Каждый узел имеет свою зону ответственности.






15) Что такое порт, сколько портов у Linux сервера
Порт (англ. port) — целое неотрицательное число, записываемое в заголовках протоколов транспортного уровня сетевой модели OSI


Количество портов ограничено с учётом 16-битной адресации (216=65536, начало — «0»). Все порты разделены на три диапазона — общеизвестные (или системные, 0—1023), зарегистрированные (или пользовательские, 1024—49151) и динамические (или частные, 49152—65535).






16) Уровни OSI
OSI (Open Systems Interconnection)
это скелет, фундамент и база всех сетевых сущностей. Модель определяет сетевые протоколы, распределяя их на 7 логических уровней.
В модели OSI средства взаимодействия делятся на семь уровней:
* прикладной, (доступ к сетевым службам)
* представления, (представление и кодирование данных)
* сеансовый, (управление сеансом связи )
* транспортный, (безопасное-надежное соединение точка-точка)
* сетевой,  (определение пути и IP(логическая адресация)
* канальны, (MAC LLS (физическая адресация)
* физический. (кабель сигнал бинарная передача)







17) Хедеры http запросов


Header - это заголовок запроса.
В информационных технологиях заголовок относится к дополнительным данным, помещаемым в начале блока данных, которые хранятся или передаются.
Заголовки HTTP (англ. HTTP Headers) — это строки в HTTP-сообщении, содержащие разделённую двоеточием пару имя-значение


Когда вы отправляете запрос HEAD, это означает, что вас интересуют только код ответа и HTTP headers,  а не сам документ.






18) Что такое Домен?


это адресная строка для перехода на определенный сайт, использовались обычные IP-адреса. От подобной практики отказались, поскольку запоминание комбинаций цифр – непростая задача. Вместо них используют буквенные обозначения, например «https://domain.com», это домен


Структура домена
Домен это определенная последовательность символов, которую условно разделяют на составные единицы. Для примера используем доменное имя «freehost.com.ua»:
* ua - домен первого уровня;
* com - второго уровня;
* freehost.com.ua - третьего уровня.


Как работает домен
Несмотря на отказ от использования обычных IP в пользу доменных имен, для перехода на сайты можно использовать и записи типа 108.173.192.0. Но такой подход непрактичен. Для сопоставления доменных имен с фактическими IP-адресами веб-ресурсов в сети работаю специальные узлы, называемые DNS-серверами. Все эти узлы включены в единую DNS-систему, которая представляет собой распределенную базу данных, состоящую из множества зон (наборов DNS-записей).
Процесс взаимодействия с системой DNS в простом представлении происходит следующим образом:
1. Пользователь указывает доменное имя ресурса в адресной строке;
2. Выполняется отправка запроса на DNS-сервер;
3. Узел сопоставляет буквенное обозначение (домен) с фактическим IP-адресом запрашиваемого ресурса;
4. Браузер выполняет переход на фактический IP-адрес требуемого ресурса.